# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Shutdown Ubuntu MySQL (SUDO)
      run: sudo service mysql stop # Shutdown the Default MySQL, "sudo" is necessary, please not remove it

    - name: Start MySQL
      uses: obeezzy/mysql-action@v1.1
      with:
        mysql root password: ${{ secrets.MYSQL_PASSWORD }}
        mysql database: rr_test
        mysql version: latest

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Check MySQL version
      run: |
        echo "Attempt to connect to server with client"
        docker ps
        docker logs `docker ps --format "{{.ID}}"`
        MYSQL_IP=$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' `docker ps --format "{{.ID}}"`)
        #docker exec `docker ps --format "{{.ID}}"` mysql -uroot -p${{ secrets.MYSQL_PASSWORD }}
        docker exec `docker ps --format "{{.ID}}"` mysqld --plugin-load="mysqlx=mysqlx.so"
        sudo ss -tulwn
        docker exec `docker ps --format "{{.ID}}"` mysql --version

    # - name: Check if XDevAPI is listening on port 33060
    #   run: mysql -u ${{ secrets.MYSQL_USER }} -p${{ secrets.MYSQL_PASSWORD }} -e "SHOW plugins" | grep -i mysqlx

    - name: Run tests
      env:
        MYSQL_USER: ${{ secrets.MYSQL_USER }}
        MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      run: |
        pushd tests
        echo -e "\e[92mSetup virtual environment"
        sudo apt-get install python3-venv
        python3 -m venv env
        . env/bin/activate
        echo -e "\e[92mUpgrade pip and install dependencies"
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        echo -e "\e[92mRun all tests"
        chmod +x ./runtests.sh
        export PYTHONPATH=.
        ./runtests.sh